{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/CYH/JS/react_native/Shop APP/screens/shop/CartScreen.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Colors from \"../../constants/Colors\";\nimport CartItem from \"../../components/shop/CartItem\";\nimport * as cartActions from \"../../store/actions/cart\";\nimport * as ordersActions from \"../../store/actions/orders\";\n\nvar CartScreen = function CartScreen(props) {\n  var cartTotalAmount = useSelector(function (state) {\n    return state.cart.totalAmount;\n  });\n  var cartItems = useSelector(function (state) {\n    var transformedCartItems = [];\n\n    for (var key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum\n      });\n    }\n\n    return transformedCartItems.sort(function (a, b) {\n      return a.productId > b.productId ? 1 : -1;\n    });\n  });\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.summary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.summaryText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Total:\", ' ', React.createElement(Text, {\n    style: styles.amount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"$\", cartTotalAmount.toFixed(2))), React.createElement(Button, {\n    color: Colors.accent,\n    title: \"Order Now\",\n    disabled: cartItems.length === 0,\n    onPress: function onPress() {\n      dispatch(ordersActions.addOrder(cartItems, cartTotalAmount));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), React.createElement(FlatList, {\n    data: cartItems,\n    keyExtractor: function keyExtractor(item) {\n      return item.productId;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(CartItem, {\n        quantity: itemData.item.quantity,\n        title: itemData.item.productTitle,\n        amount: itemData.item.sum,\n        deletable: true,\n        onRemove: function onRemove() {\n          dispatch(cartActions.removeFromCart(itemData.item.productId));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\n\nCartScreen.navigationOptions = {\n  headerTitle: 'Your Cart'\n};\nvar styles = StyleSheet.create({\n  screen: {\n    margin: 20\n  },\n  summary: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    padding: 10,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 5,\n    borderRadius: 10,\n    backgroundColor: 'white'\n  },\n  summaryText: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 18\n  },\n  amount: {\n    color: Colors.primary\n  }\n});\nexport default CartScreen;","map":{"version":3,"sources":["/Users/CYH/JS/react_native/Shop APP/screens/shop/CartScreen.js"],"names":["React","useSelector","useDispatch","Colors","CartItem","cartActions","ordersActions","CartScreen","props","cartTotalAmount","state","cart","totalAmount","cartItems","transformedCartItems","key","items","push","productId","productTitle","productPrice","quantity","sum","sort","a","b","dispatch","styles","screen","summary","summaryText","amount","toFixed","accent","length","addOrder","item","itemData","removeFromCart","navigationOptions","headerTitle","StyleSheet","create","margin","flexDirection","alignItems","justifyContent","marginBottom","padding","shadowColor","shadowOpacity","shadowOffset","width","height","shadowRadius","elevation","borderRadius","backgroundColor","fontFamily","fontSize","color","primary"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, FlatList, Button, StyleSheet } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Colors from '../../constants/Colors';\nimport CartItem from '../../components/shop/CartItem';\nimport * as cartActions from '../../store/actions/cart';\nimport * as ordersActions from '../../store/actions/orders';\n\nconst CartScreen = props => {\n  const cartTotalAmount = useSelector(state => state.cart.totalAmount);\n  const cartItems = useSelector(state => {\n    const transformedCartItems = [];\n    for (const key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum\n      });\n    }\n    return transformedCartItems.sort((a, b) =>\n      a.productId > b.productId ? 1 : -1\n    );\n  });\n  const dispatch = useDispatch();\n\n  return (\n    <View style={styles.screen}>\n      <View style={styles.summary}>\n        <Text style={styles.summaryText}>\n          Total:{' '}\n          <Text style={styles.amount}>${cartTotalAmount.toFixed(2)}</Text>\n        </Text>\n        <Button\n          color={Colors.accent}\n          title=\"Order Now\"\n          disabled={cartItems.length === 0}\n          onPress={() => {\n            dispatch(ordersActions.addOrder(cartItems, cartTotalAmount));\n          }}\n        />\n      </View>\n      <FlatList\n        data={cartItems}\n        keyExtractor={item => item.productId}\n        renderItem={itemData => (\n          <CartItem\n            quantity={itemData.item.quantity}\n            title={itemData.item.productTitle}\n            amount={itemData.item.sum}\n            deletable\n            onRemove={() => {\n              dispatch(cartActions.removeFromCart(itemData.item.productId));\n            }}\n          />\n        )}\n      />\n    </View>\n  );\n};\n\nCartScreen.navigationOptions = {\n  headerTitle: 'Your Cart'\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    margin: 20\n  },\n  summary: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    padding: 10,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    elevation: 5,\n    borderRadius: 10,\n    backgroundColor: 'white'\n  },\n  summaryText: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 18\n  },\n  amount: {\n    color: Colors.primary\n  }\n});\n\nexport default CartScreen;\n"]},"metadata":{},"sourceType":"module"}